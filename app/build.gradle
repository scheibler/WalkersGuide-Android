apply plugin: 'com.android.application'
apply plugin: 'android-rocket-launcher'

// get signing properties
Properties keystoreProperties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    if (localProperties.getProperty('signingPropertiesFile') != null
            && new File(localProperties.getProperty('signingPropertiesFile')).exists()) {
        keystoreProperties.load(
                new FileInputStream(file(localProperties.getProperty('signingPropertiesFile'))))
    }
}
if (keystoreProperties.isEmpty()) {
    keystoreProperties.setProperty('storeFile', 'empty.keystore')
    keystoreProperties.setProperty('storePassword', 'storePassword')
    keystoreProperties.setProperty('keyAlias', 'keyAlias')
    keystoreProperties.setProperty('keyPassword', 'keyPassword')
}

android {
    compileSdkVersion 33

    defaultConfig {
        resConfigs "en", "de"
        minSdkVersion 19
        targetSdkVersion 33
        multiDexEnabled true
        // contact data
        buildConfigField 'String', 'CONTACT_EMAIL', '"info@walkersguide.org"'
        buildConfigField 'String', 'CONTACT_WEBSITE', '"https://www.walkersguide.org"'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    signingConfigs {

        beta {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }

        prod {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    flavorDimensions "version"
    productFlavors {

        beta {
            applicationId "org.walkersguide.android.beta"
            versionCode 6
            versionName '2.2.0-b1'
            signingConfig signingConfigs.beta
            // internal
            // database
            buildConfigField 'String', 'DATABASE_NAME', '"walkersguide.db"'
            buildConfigField 'Integer', 'DATABASE_VERSION', '10'
            // server
            buildConfigField 'String', 'SERVER_URL', '"https://api.walkersguide.org/"'
            buildConfigField 'String', 'SERVER_URL_DEV', '"https://api.test.walkersguide.org/"'
            buildConfigField 'int[]', 'SUPPORTED_API_VERSION_LIST', '{3, 4}'
        }

        prod {
            applicationId "org.walkersguide.android"
            dimension "version"
            versionCode 26
            versionName '2.3.1'
            signingConfig signingConfigs.prod
            // internal
            // database
            buildConfigField 'String', 'DATABASE_NAME', '"walkersguide.db"'
            buildConfigField 'Integer', 'DATABASE_VERSION', '10'
            // server
            buildConfigField 'String', 'SERVER_URL', '"https://api.walkersguide.org/"'
            buildConfigField 'String', 'SERVER_URL_DEV', '"https://api.test.walkersguide.org/"'
            buildConfigField 'int[]', 'SUPPORTED_API_VERSION_LIST', '{3, 4}'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${variant.flavorName}-${variant.versionName}-${variant.buildType.name}.apk"
        }
    }

    lintOptions {
        disable "GoogleAppIndexingWarning", "Autofill", "IconLauncherShape", "ButtonStyle"
        abortOnError true
        baseline file("lint-baseline.xml")
    }
}

dependencies {
    // androidX
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core:1.10.1'
    implementation 'androidx.drawerlayout:drawerlayout:1.2.0'
    implementation 'androidx.fragment:fragment:1.6.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    // material design
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // google helpers
    implementation 'com.google.guava:guava:31.0.1-android'
    implementation 'com.google.code.gson:gson:2.9.0'

    // logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // public transport enabler
    implementation 'de.schildbach.pte:public-transport-enabler-2023-05-18@jar'
    implementation 'com.squareup.okhttp3:okhttp:3.12.13'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.13'
    implementation 'org.slf4j:slf4j-api:2.0.7'
}

configurations.implementation {
    // must exclude that jdk below, otherwise classes get duplicated
    // required since update of androidx.core dependency to version 1.10.0
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}

repositories {
    // include local libs directory
    flatDir {
        dirs 'libs'
    }
}
